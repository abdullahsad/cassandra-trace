'use strict';

var util = require('util');

var debug = require('debug')('express-cassandra');

var UdtBuilder = function f(client) {
  this._client = client;
};

UdtBuilder.prototype = {
  create_udt(typeName, typeDef, callback) {
    var udtFields = [];
    Object.keys(typeDef).forEach(function (field) {
      udtFields.push(util.format('"%s" %s', field, typeDef[field]));
    });
    var query = util.format('CREATE TYPE IF NOT EXISTS "%s" (%s);', typeName, udtFields.toString());
    debug('executing query: %s', query);
    this._client.execute(query, function (err) {
      callback(err);
    });
  },

  get_udt(typeName, keyspaceName, callback) {
    var query = util.format("SELECT * FROM system_schema.types WHERE keyspace_name = '%s' AND type_name = '%s';", keyspaceName, typeName);
    debug('executing query: %s', query);
    this._client.execute(query, function (err, result) {
      if (err) {
        callback(err);
        return;
      }

      if (result.rows && result.rows.length > 0) {
        callback(null, result.rows[0]);
        return;
      }

      callback();
    });
  }
};

module.exports = UdtBuilder;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idWlsZGVycy91ZHQuanMiXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJkZWJ1ZyIsIlVkdEJ1aWxkZXIiLCJmIiwiY2xpZW50IiwiX2NsaWVudCIsInByb3RvdHlwZSIsImNyZWF0ZV91ZHQiLCJ0eXBlTmFtZSIsInR5cGVEZWYiLCJjYWxsYmFjayIsInVkdEZpZWxkcyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiZmllbGQiLCJwdXNoIiwiZm9ybWF0IiwicXVlcnkiLCJ0b1N0cmluZyIsImV4ZWN1dGUiLCJlcnIiLCJnZXRfdWR0Iiwia2V5c3BhY2VOYW1lIiwicmVzdWx0Iiwicm93cyIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7O0FBRUEsSUFBTUMsUUFBUUQsUUFBUSxPQUFSLEVBQWlCLG1CQUFqQixDQUFkOztBQUVBLElBQU1FLGFBQWEsU0FBU0MsQ0FBVCxDQUFXQyxNQUFYLEVBQW1CO0FBQ3BDLE9BQUtDLE9BQUwsR0FBZUQsTUFBZjtBQUNELENBRkQ7O0FBSUFGLFdBQVdJLFNBQVgsR0FBdUI7QUFDckJDLGFBQVdDLFFBQVgsRUFBcUJDLE9BQXJCLEVBQThCQyxRQUE5QixFQUF3QztBQUN0QyxRQUFNQyxZQUFZLEVBQWxCO0FBQ0FDLFdBQU9DLElBQVAsQ0FBWUosT0FBWixFQUFxQkssT0FBckIsQ0FBNkIsVUFBQ0MsS0FBRCxFQUFXO0FBQ3RDSixnQkFBVUssSUFBVixDQUFlakIsS0FBS2tCLE1BQUwsQ0FDYixTQURhLEVBRWJGLEtBRmEsRUFHYk4sUUFBUU0sS0FBUixDQUhhLENBQWY7QUFLRCxLQU5EO0FBT0EsUUFBTUcsUUFBUW5CLEtBQUtrQixNQUFMLENBQ1osc0NBRFksRUFFWlQsUUFGWSxFQUdaRyxVQUFVUSxRQUFWLEVBSFksQ0FBZDtBQUtBbEIsVUFBTSxxQkFBTixFQUE2QmlCLEtBQTdCO0FBQ0EsU0FBS2IsT0FBTCxDQUFhZSxPQUFiLENBQXFCRixLQUFyQixFQUE0QixVQUFDRyxHQUFELEVBQVM7QUFDbkNYLGVBQVNXLEdBQVQ7QUFDRCxLQUZEO0FBR0QsR0FuQm9COztBQXFCckJDLFVBQVFkLFFBQVIsRUFBa0JlLFlBQWxCLEVBQWdDYixRQUFoQyxFQUEwQztBQUN4QyxRQUFNUSxRQUFRbkIsS0FBS2tCLE1BQUwsQ0FDWixvRkFEWSxFQUVaTSxZQUZZLEVBR1pmLFFBSFksQ0FBZDtBQUtBUCxVQUFNLHFCQUFOLEVBQTZCaUIsS0FBN0I7QUFDQSxTQUFLYixPQUFMLENBQWFlLE9BQWIsQ0FBcUJGLEtBQXJCLEVBQTRCLFVBQUNHLEdBQUQsRUFBTUcsTUFBTixFQUFpQjtBQUMzQyxVQUFJSCxHQUFKLEVBQVM7QUFDUFgsaUJBQVNXLEdBQVQ7QUFDQTtBQUNEOztBQUVELFVBQUlHLE9BQU9DLElBQVAsSUFBZUQsT0FBT0MsSUFBUCxDQUFZQyxNQUFaLEdBQXFCLENBQXhDLEVBQTJDO0FBQ3pDaEIsaUJBQVMsSUFBVCxFQUFlYyxPQUFPQyxJQUFQLENBQVksQ0FBWixDQUFmO0FBQ0E7QUFDRDs7QUFFRGY7QUFDRCxLQVpEO0FBYUQ7QUF6Q29CLENBQXZCOztBQTRDQWlCLE9BQU9DLE9BQVAsR0FBaUIxQixVQUFqQiIsImZpbGUiOiJ1ZHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuXG5jb25zdCBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJykoJ2V4cHJlc3MtY2Fzc2FuZHJhJyk7XG5cbmNvbnN0IFVkdEJ1aWxkZXIgPSBmdW5jdGlvbiBmKGNsaWVudCkge1xuICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG59O1xuXG5VZHRCdWlsZGVyLnByb3RvdHlwZSA9IHtcbiAgY3JlYXRlX3VkdCh0eXBlTmFtZSwgdHlwZURlZiwgY2FsbGJhY2spIHtcbiAgICBjb25zdCB1ZHRGaWVsZHMgPSBbXTtcbiAgICBPYmplY3Qua2V5cyh0eXBlRGVmKS5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgICAgdWR0RmllbGRzLnB1c2godXRpbC5mb3JtYXQoXG4gICAgICAgICdcIiVzXCIgJXMnLFxuICAgICAgICBmaWVsZCxcbiAgICAgICAgdHlwZURlZltmaWVsZF0sXG4gICAgICApKTtcbiAgICB9KTtcbiAgICBjb25zdCBxdWVyeSA9IHV0aWwuZm9ybWF0KFxuICAgICAgJ0NSRUFURSBUWVBFIElGIE5PVCBFWElTVFMgXCIlc1wiICglcyk7JyxcbiAgICAgIHR5cGVOYW1lLFxuICAgICAgdWR0RmllbGRzLnRvU3RyaW5nKCksXG4gICAgKTtcbiAgICBkZWJ1ZygnZXhlY3V0aW5nIHF1ZXJ5OiAlcycsIHF1ZXJ5KTtcbiAgICB0aGlzLl9jbGllbnQuZXhlY3V0ZShxdWVyeSwgKGVycikgPT4ge1xuICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICB9KTtcbiAgfSxcblxuICBnZXRfdWR0KHR5cGVOYW1lLCBrZXlzcGFjZU5hbWUsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgcXVlcnkgPSB1dGlsLmZvcm1hdChcbiAgICAgIFwiU0VMRUNUICogRlJPTSBzeXN0ZW1fc2NoZW1hLnR5cGVzIFdIRVJFIGtleXNwYWNlX25hbWUgPSAnJXMnIEFORCB0eXBlX25hbWUgPSAnJXMnO1wiLFxuICAgICAga2V5c3BhY2VOYW1lLFxuICAgICAgdHlwZU5hbWUsXG4gICAgKTtcbiAgICBkZWJ1ZygnZXhlY3V0aW5nIHF1ZXJ5OiAlcycsIHF1ZXJ5KTtcbiAgICB0aGlzLl9jbGllbnQuZXhlY3V0ZShxdWVyeSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHJlc3VsdC5yb3dzICYmIHJlc3VsdC5yb3dzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0LnJvd3NbMF0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSk7XG4gIH0sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVkdEJ1aWxkZXI7XG4iXX0=